/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.2-dev */

#ifndef PB_MESSAGE_PB_H_INCLUDED
#define PB_MESSAGE_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _Message {
    float temperature;
    float pressure;
    float humidity;
    uint64_t timestamp;
} Message;


/* Initializer values for message structs */
#define Message_init_default                     {0, 0, 0, 0}
#define Message_init_zero                        {0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define Message_temperature_tag                  1
#define Message_pressure_tag                     2
#define Message_humidity_tag                     3
#define Message_timestamp_tag                    4

/* Struct field encoding specification for nanopb */
#define Message_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, FLOAT,    temperature,       1) \
X(a, STATIC,   REQUIRED, FLOAT,    pressure,          2) \
X(a, STATIC,   REQUIRED, FLOAT,    humidity,          3) \
X(a, STATIC,   REQUIRED, UINT64,   timestamp,         4)
#define Message_CALLBACK NULL
#define Message_DEFAULT NULL

extern const pb_msgdesc_t Message_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Message_fields &Message_msg

/* Maximum encoded size of messages (where known) */
#define Message_size                             26

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
